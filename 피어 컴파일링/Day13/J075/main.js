import {txApplication} from './txApplication.js'
import {rxPhysical} from './rxPhysical.js'

const SYN = '282033433a35413a42343a39333a30313a34422c2033433a35413a42343a36463a45413a44432c207b203139322e3136382e312e352c203139322e3136382e312e392c205b53594e2c2031303030312c20383038302c2031302c202c20305d207d2029';
const ACK = '282033433a35413a42343a39333a30313a34422c2033433a35413a42343a36463a45413a44432c207b203139322e3136382e312e352c203139322e3136382e312e392c205b41434b2c2031303030312c20383038302c2031312c203130312c20305d207d2029';
const bits1 = '282033433a35413a42343a39333a30313a34422c2033433a35413a42343a36463a45413a44432c207b203139322e3136382e312e352c203139322e3136382e312e392c205b444154412c2031303030312c20383038302c203131312c203130302c20747275652c2046726f6d3a206a6b40626f6f737463616d702e636f6e6e6563742e6f722e6b725c725c6e546f3a2063616d70657240626f6f737463616d702e636f6e6e6563742e6f722e6b725c725c6e5469746c653a2048656c6c6f20576f726c645c725c6e536573735d207d2029';
const bits2 = '282033433a35413a42343a39333a30313a34422c2033433a35413a42343a36463a45413a44432c207b203139322e3136382e312e352c203139322e3136382e312e392c205b444154412c2031303030312c20383038302c203231312c203130302c20747275652c20696f6e2d49643a2032623339376231652d363461632d346564342d393837642d3030653932323038326335395c725c6e5c725c6e5347567362473867516d397663335244595731775a58497344516f4a56476870637942745a584e7a5957646c494864795d207d2029';
const bits3 = '282033433a35413a42343a39333a30313a34422c2033433a35413a42343a36463a45413a44432c207b203139322e3136382e312e352c203139322e3136382e312e392c205b444154412c2031303030312c20383038302c203431362c203230352c2066616c73652c20615852305a573467596e6b67536b73755d207d2029';

/**
 * 시뮬레이터를 돌리는 메인 함수
 */
function main(){
    const sim = 'RX' // 전송 계층 관점: TX, 수신 계층 관점: RX

    if(sim === "TX") {
        txApplication();
    }else if(sim === "RX"){
        rxPhysical(SYN);  // 전송 계층으로부터 SYN 내용의 bit를 받았다고 가정 -> 3way handshake 위함
        rxPhysical(ACK); // 전송 계층으로부터 ACK 내용의 bit를 받았다고 가정 -> 3way handshake 위함
        rxPhysical(bits1); // 전송 계층으로부터 데이터 패킷1의 bit를 받았다고 가정 -> 아래 것까지 세그먼트가 3개로 나누어져있는 것.
        rxPhysical(bits2); // 전송 계층으로부터 데이터 패킷2의 bit를 받았다고 가정
        rxPhysical(bits3); // 전송 계층으로부터 데이터 패킷3의 bit를 받았다고 가정
    }
}

main()