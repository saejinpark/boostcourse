{
    "name": "day6",
    "version": "1.0.0",
    "type": "module",
    "description": "- **첫번째**\r   - HTML5 같은 XML 데이터를 분석해서 요소별로 분리하는 Parser를 구현해야 한다.\r   - 아래 예제만 처리하는 파서를 만드는 게 아니라, XML 데이터를 모두 처리할 수 있어야 한다.\r - **두번째**\r   - 다음과 같이 element를 찾는 기능을 구현해야 한다.\r     - 태그 속성을 비교해서 찾는 `elementByAttribute()`\r     - 경로 형태로 지정해서 찾는 `findXPath()`\r     - 태그 이름으로 찾는 `elementsByTag()`\r # 프로그래밍 요구사항\r - **첫번째**\r   - 기존에 구현된 XML 분석을 도와주는 xmldom 나 유사한 라이브러리와 node 모듈을 사용할 수 없으며, 이와 유사한 파싱을 처리해주는 외부 라이브러리를 모두 사용할 수 없다.\r   - 정규표현식은 token을 추출하고 분석하기 위한 용도로 사용할 수 있다. (선택사항이라 사용하지 않아도 된다.)\r   - 문자열 분석을 위해서 단계별로 역할을 나눠서 처리한다.\r   - tokenizer, lexer, parser 를 처리하는 메서드를 각각 만든다.\r   - 함수가 길어지거나 너무 많은 역할을 하지않도록 하위 함수로 나눈다.\r   - 태그 중첩을 처리하기 위해서 Stack 동작을 직접 구현해야 한다.\r   - 만약 태그가 제대로 닫히지 않으면 stringify() 결과는 \"올바른 XML 형식이 아닙니다.\"를 리턴한다.\r - **두번째**\r   1. elementByAttribute 요구사항\r     태그의 속성과 값을 비교해서 해당 요소를 찾는 함수를 구현한다.\r     >dom.elementByAttribute(\"lang\", value: \"ko\");  \r     >dom.elementByAttribute(\"id\", value: \"foo\");\r   2. elementByTag 요구사항\r     태그로 모든 해당 요소를 찾아 배열로 리턴하는 함수를 구현한다.\r     >dom.elementsByTag(\"P\");  \r     >dom.elementsByTag(\"IMG\");\r   3. XPath 요구사항\r     경로가 너무 깊어지면 찾기 어렵기 때문에 XPath 라는 형식으로 원하는 요소를 지정할 수 있다.\r     예를 들어 XPath가 `/HTML/BODY/P[1]` 라면 HTML 태그 아래 BODY 태그 아래 첫번째 P 태그 요소를 의미한다.\r     출력 예제처럼 P 요소가 여러 개일 때 XPath가 `/HTML/BODY/P` 형태로 인덱스가 주어지지 않으면 항상 첫 번째 요소를 의미한다.\r     - 단, 태그 대소문자는 구분하지 않아도 된다. HTML 이나 html 은 동일하게 처리한다.\r # 나만의 체크포인트\r ## 첫번째 기능 체크포인트\r - [ ] HTML5 같은 XML 데이터를 분석해서 요소별로 분리하는 Parser를 구현.\r - [ ] XML 데이터를 모두 처리할 수 있어야 함.\r ## 첫번째 프로그래밍 체크포인트\r - [ ] 외부 라이브러리를 사용하지 않았다.\r - [ ] 정규표현식을 token을 추출하고 분석하기 위한 용도로 사용했다.\r - [ ] 문자열 분석을 위해 단계별로 역할을 나눠서 처리했다.\r - [ ] tokenizer, lexer, parser 를 처리하는 메서드를 각각 만들었다.\r - [ ] 함수가 길어지거나 너무 많은 역할을 하지않도록 하위 함수로 나누었다.\r - [ ] 태그 중첩을 처리하기 위해서 Stack 동작을 직접 구현했다.\r - [ ] 만약 태그가 제대로 닫히지 않으면 stringify() 결과는 \"올바른 XML 형식이 아닙니다.\"를 리턴한다.\r ## 두번째 기능 체크포인트\r - [ ] elementByAttribute() 구현\r - [ ] findXPath() 구현\r - [ ] elementsByTag() 구현\r ## 두번째 프로그래밍 체크포인트\r - [ ] 태그의 속성과 값을 비교해서 해당 요소를 찾는 함수를 구현했다.\r - [ ] 태그로 모든 해당 요소를 찾아 배열로 리턴하는 함수를 구현했다.\r - [ ] XPath 라는 형식으로 원하는 요소를 지정할 수 있다.\r # 학습메모",
    "main": "parser.js",
    "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
        "type": "git",
        "url": "git+https://gist.github.com/645207df4da967af5228677e5d7f58F5.git"
    },
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": "https://gist.github.com/645207df4da967af5228677e5d7f58F5"
    },
    "homepage": "https://gist.github.com/645207df4da967af5228677e5d7f58F5"
}
