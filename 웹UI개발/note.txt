1.1. 깃 소개
    깃은 버전 관리 시스템의 한 종류이다.
    버전 괄리 시스템은 파일 변화를 시간에 따라 기록 했다가 나중에 특정 시점의 버전을 다시 꺼내올 수 있는 시스템이다.
    . 개별 파일 또는 프로젝트 전체를 이전 상태로 되돌릴 수 있고
    . 시간에 따른 변경 사항을 비교해 볼 수 있고
    . 누가 문제를 일으켰는지 추적할 수 있고
    . 누가 언제 만들어낸 이슈 인지도 알 수 있고
    . 파일을 잃어버리거나, 잘못된 부분을 쉽게 복구할 수 있다.

1.2. 깃의 특징

    .빠르다
        다른 버전 관리 시스템과 달리 깃은 데이터를 파일 시스템 스냅샷으로 취급하고 크기가 아주 작다.
        파일이 달라지짖 않았으면 성능을 위해서 파일을 새로 저장하지 않는다. 단지 이전 상태의 파일에 대한 링크만 저장한다.
    
    .거의 모든 명령을 로컬에서 실행한다.
        거의 모든 명령이 로컬의 파일과 데이터만 사용한다. 프로젝트의 히스토리 조회 시 서버 없이 로컬에서 조회하고, 오프라인 상태에서도 작업이 가능하다.
    
    .무결성
        파일을 이름으로 저장하지 않고 파일의 내용이나 디렉터리 구조를 이용하여 체크섬을 구하고 샤-1 해시를 사용하여 40자 길이의 16진수 문자열로 저장한다.

    /스냅샷
        컴퓨터 파일 시스템에서 스냅샷(snapshot)은 과거의 한 때 존재하고 유지시킨 컴퓨터 파일과 디렉터리의 모임이다. 스냅샷은 읽기만 가능한 특정 시간의 가상 복제 파일시스템이라고 할 수 있다.
    
    /체크섬
        오류 정정을 통해, 공간(전자 통신)이나 시간(기억 장치) 속에서 송신된 자료의 무결성을 보호하는 단순한 방법이다. 기본적인 메시지 구성 요소(보통 비트)를 추가하여 결과 값을 저장함으로써 동작한다. 나중에 누구나 데이터에 같은 작업을 수행할 수 있고, 무결성 검사에 대한 결과를 비교할 수 있으며, (체크섬이 맞아 떨어지는지 확인해 봄으로써) 메시지가 손상되지 않았다고 결론을 내릴 수도 있다.
    
    /sha-1
        안전한 해시 알고리즘. 서로 관련된 암호학적 해시 함수들의 모음